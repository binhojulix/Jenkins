- name: Install all softwares
  hosts: dev
  become: yes
  gather_facts: false 
  vars_files:
  - vars.yml


  tasks:
    # - name: Install aptitude
    #   apt:
    #     name: aptitude
    #     state: latest
    #     update_cache: yes
    #     force_apt_get: yes

    # - name: Install required system packages
    #   apt: name={{ item }} state=latest update_cache=yes
    #   loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools', 'virtualenv',
    #    'pip', 'python3-dev', 'mysql-server', 'mysql-client', 'python3-pymysql', 'libmysqlclient-dev', 'build-essential', 'default-jdk', 'default-jre']

   

    # - name: Install git
    #   apt:
    #     name: git
    #     state: present
    #     update_cache: yes
        

    # - name: Clone a github repository
    #   git:
    #     repo: https://github.com/binhojulix/Jenkins.git
    #     dest: /home/ubuntu/source
    #     clone: yes
    #     update: yes

   
    # - name: start and enable mysql service
    #   service:
    #     name: mysql
    #     state: started
    #     enabled: yes

    # - name: creating mysql user (medium_post)
    #   mysql_user:
    #     name: devops
    #     password: devops
    #     priv: '*.*:ALL'
    #     host: '%'
    #     state: present
    #   become: yes

    # - name: creating medium_db
    #   mysql_db:
    #     name: devops
    #     state: present

    - name: Enable remote login to mysql
      lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: '^bind-address'
        line: 'bind-address = 0.0.0.0'
        backup: yes
      notify:
        - Restart mysql




    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull

    # Creates the number of containers defined by the variable create_containers, using values from vars file
    - name: Create default containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ create_containers }}

    

    - name: Open Jenkins port
      ufw:
        state: enabled
        rule: allow
        port: "8080"
        proto: tcp

    - name: Open SSH port
      ufw:
        state: enabled
        rule: allow
        port: "22"
        proto: tcp

    - name: Open SSH port
      ufw:
        state: enabled
        rule: allow
        port: "3306"
        proto: tcp

  handlers:
  - name: Restart mysql
    service:
      name: mysql
      state: restarted  



    

    


